@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (User.IsInRole("HIT Faculty") || User.IsInRole("Nursing Faculty") || User.IsInRole("Administrator"))
        {
            <li class="nav-item">
                <a class="nav-link" asp-controller="Administration" asp-action="Index">Administration</a>
            </li>
        }
        <li class="nav-item">
            <a class="nav-link" asp-controller="Administration" asp-action="EditRegisterDetails">
               Hello, @UserManager.GetUserName(User)!
            </a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home")">
                <i class="fas fa-sign-out-alt"></i>&nbsp;Logout
            </a>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Register"
               asp-route-returnUrl="@Url.Action("EditRegisterDetails", "Administration")"><i class="fas fa-user-plus"></i>&nbsp;Create User Account</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Index", "Home")"><i class="fas fa-sign-in-alt"></i>&nbsp;Login</a>
        </li>
    }
</ul>
